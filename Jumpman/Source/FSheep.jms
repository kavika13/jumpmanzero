include Constants
include Level20Resources

dim iInit
dim iX
dim iY
dim iZ

dim iDir

dim iSlow
dim iAnimate

dim iLadderZ
dim iFrame

dim iMeshes[30]
dim iCopter

dim iCount
dim iSpin
dim iFlyDir

dim iCopterSize
dim iAirTime

dim iDelay

dim QueueLength
dim Queue[100]

Sub Main()

  if iInit=0 
    Initialize()
    iCopter=newMesh(#meshCopter)
  end if

  if iDelay>0
    iDelay=iDelay-1
    SelectObjectMesh(iMeshes[iFrame])
    if (iDelay & 2) && (iDelay<50)
      Identity()
      Translate(iX,iY+6.5,iZ-0.5)
      SetProperties(#TextureSheep,1)
    else
      SetProperties(0,0)            
    end if
    return 0
  end if

  SelectObjectMesh(iMeshes[iFrame])
  SetProperties(0,0)

  iCopterSize=0
  AdvanceFrame()
  MoveSheep()

  SelectObjectMesh(iMeshes[iFrame])
  Identity()
  Translate(iX,iY+6.5,iZ-0.5)
  SetProperties(#textureSheep,1)

  if iCopterSize>0
    iSpin=iSpin+35
    SelectObjectMesh(iCopter)
    Identity()
    RotateX(270)
    RotateY(iSpin)
    Translate(0,4,0)
    Scale(iCopterSize,iCopterSize,iCopterSize)
    Translate(iX,iY+8.5,iZ-0.5)
    SetProperties(#textureBoringRed,1)
  else
    SelectObjectMesh(iCopter)
    SetProperties(0,0)
  end if

  if Collide(iX-6,iY+1,iX+6,IY+9)
    Sound(#SoundGoat)
    Kill()
  end if

end Sub

sub CheckForChange()
  dim iPlat
  dim iLad
  dim iHit

  dim iY1
  dim iY2
  dim iX1
  dim iX2

  dim iLadderX

  dim bNewDir

  if iCount>0
    iCount=iCount-1
    return 0
  end if

  if iDir=4 || iDir=3
    FindLadder(iX,iY)
    iLad=getext(#event4)
    if iLad<0 
      return 0
    end if

    ABSLadder(iLad)
    iLadderX=getsel(#sx1)
    iLadderZ=getsel(#sz1)

    if iX<(iLadderX-.5) || ix>(iLadderX+.5)
      return 0
    end if

    bNewDir=1
  end if

  if iDir=1 || iDir=2    
    iPlat=FindPlatform(iX,iY+4,4,2)  
    ABSPlatform(iPlat)
    iHit=getext(#event4)
    if iHit=iY
      bNewDir=1
    else
      return 0
    end if
  end if

  dim iNewDir
  if bNewDir
    iNewDir=Queue[0]
    MoveQueue()
  end if

  if iNewDir=0
    return 0
  end if

  if iNewDir=1 || iNewDir=2
    if iDir=3 || iDir=4
      iX=iLadderX
      iCount=15
      iFlyDir=iDir
      iAirTime=0
    end if    
  else
    if iDir=1 || iDir=2
      iCount=15
      iAirTime=0
    end if    
  end if
  iDir=iNewDir

end sub

sub MoveQueue()
  dim iLoop
  while iLoop<QueueLength-1
    Queue[iLoop]=Queue[iLoop+1]
    iLoop=iLoop+1
  loop
  QueueLength=QueueLength-1
end sub

sub AnimateCopter(iTime)
  if iTime<5
    iFrame=7
  elseif iTime<10
    iFrame=6
  else
    iFrame=5
  end if
  if iFlyDir=4
   iFrame=iFrame+10
  end if

  iCopterSize=(15-iTime)/15
end sub

sub ProgressSheep()
  if iDir=1 || iDir=2
    if iCount>0
      AnimateCopter(iCount)
      return 0
    end if
 
    if iDir=1
      iY=iY+1
    else
      iY=iY-1
    end if

    if iFlyDir=3
      iFrame=7
    else
      iFrame=17
    end if
    iCopterSize=1

  end if

  if iDir=3 || iDir=4
    if iCount>0
      AnimateCopter(15-iCount)
      return 0
    end if

    if iDir=3
      iX=iX-0.85
      iFrame=0
      if iAnimate=1 || iAnimate=3
        iFrame=1
      end if
    end if
    if iDir=4
      iX=iX+0.85
      iFrame=10
      if iAnimate=1 || iAnimate=3
        iFrame=11
      end if
    end if 

  end if

end sub

sub MoveSheep()
  CheckForChange()
  ProgressSheep()

  dim iHit
  dim iPlat

  iPlat=FindPlatform(iX,iY+5,4,2)  
  iHit=getext(#event4)

  if iDir=3 || iDir=4
    if iHit<iY
      iY=iY-0.5
      iAirTime=iAirTime+1
    else 
      iAirTime=0
    end if

    if iAirTime>30
      iFrame=4
      iY=iY-0.5
    elseif iAirTime>15
      iFrame=4
    elseif iAirTime>8
      iY=iY+0.5
      iFrame=3
    elseif iAirTime>0
      iY=iY+1
      iFrame=2
    end if
    
    if iAirTime>0 && iDir=4
      iFrame=iFrame+10
    end if

    if iHit>iY+0.4
      iY=iY+0.5
    end if
  end if

  if iDir=1 || iDir=2
    iZ=iLadderZ
  else
    AdjustZ(iPlat)
  end if

end sub

sub AdjustZ(iPlatNum)
    dim iPlatZ

    ABSplatform(iPlatNum)
    iPlatZ=getsel(#sz1)    

    if iZ<iPlatZ
      iZ=iZ+1
    end if
    if iZ>iPlatZ+2
      iZ=iZ-1
    end if
end sub

Sub AdvanceFrame()
  iSlow=iSlow+1
  if iSlow>2
    iSlow=0
    iAnimate=iAnimate+1
    if iAnimate>3
      iAnimate=0
    end if
  end if
end sub

Sub Initialize()
  iInit=1

  iMeshes[0]=newmesh(#meshSheepL1)
  iMeshes[1]=newmesh(#meshSheepL2)
  iMeshes[2]=newmesh(#meshSheepJL1)
  iMeshes[3]=newmesh(#meshSheepJL2)
  iMeshes[4]=newmesh(#meshSheepJL3)
  iMeshes[5]=newmesh(#meshSheepFL1)
  iMeshes[6]=newmesh(#meshSheepFL2)
  iMeshes[7]=newmesh(#meshSheepFL3)

  iMeshes[10]=newmesh(#meshSheepR1)
  iMeshes[11]=newmesh(#meshSheepR2)
  iMeshes[12]=newmesh(#meshSheepJR1)
  iMeshes[13]=newmesh(#meshSheepJR2)
  iMeshes[14]=newmesh(#meshSheepJR3)
  iMeshes[15]=newmesh(#meshSheepFR1)
  iMeshes[16]=newmesh(#meshSheepFR2)
  iMeshes[17]=newmesh(#meshSheepFR3)
  
end sub
