#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input shader.glsl --output shader.h --slang glsl330:hlsl5:metal_macos

    Overview:

        Shader program 'main_shader':
            Get shader desc: main_shader_shader_desc(sg_query_backend());
            Vertex shader: main_shader_vs
                Attribute slots:
                    ATTR_main_shader_vs_position = 0
                    ATTR_main_shader_vs_normal = 1
                    ATTR_main_shader_vs_texcoord0 = 2
                Uniform block 'main_shader_vs_params':
                    C struct: main_shader_vs_params_t
                    Bind slot: SLOT_main_shader_vs_params = 0
            Fragment shader: main_shader_fs
                Uniform block 'main_shader_fs_params':
                    C struct: main_shader_fs_params_t
                    Bind slot: SLOT_main_shader_fs_params = 0
                Image 'tex':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tex = 0


    Shader descriptor structs:

        sg_shader main_shader = sg_make_shader(main_shader_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'main_shader_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_main_shader_vs_position] = { ... },
                    [ATTR_main_shader_vs_normal] = { ... },
                    [ATTR_main_shader_vs_texcoord0] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_tex = 0;

    Bind slot and C-struct for uniform block 'main_shader_vs_params':

        main_shader_vs_params_t main_shader_vs_params = {
            .local_to_world_matrix = ...;
            .local_to_view_matrix = ...;
            .local_to_projection_matrix = ...;
            .transpose_world_to_local_matrix = ...;
            .uv_offset = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_main_shader_vs_params, &SG_RANGE(main_shader_vs_params));

    Bind slot and C-struct for uniform block 'main_shader_fs_params':

        main_shader_fs_params_t main_shader_fs_params = {
            .scene_ambient_color = ...;
            .material_ambient_tint = ...;
            .material_diffuse_tint = ...;
            .light_ambient_color = ...;
            .light_diffuse_color = ...;
            .light_position = ...;
            .light_range = ...;
            .is_fog_enabled = ...;
            .fog_color = ...;
            .fog_start = ...;
            .fog_end = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_main_shader_fs_params, &SG_RANGE(main_shader_fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_main_shader_vs_position (0)
#define ATTR_main_shader_vs_normal (1)
#define ATTR_main_shader_vs_texcoord0 (2)
#define SLOT_tex (0)
#define SLOT_main_shader_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct main_shader_vs_params_t {
    hmm_mat4 local_to_world_matrix;
    hmm_mat4 local_to_view_matrix;
    hmm_mat4 local_to_projection_matrix;
    hmm_mat4 transpose_world_to_local_matrix;
    hmm_vec2 uv_offset;
    uint8_t _pad_264[8];
} main_shader_vs_params_t;
#pragma pack(pop)
#define SLOT_main_shader_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct main_shader_fs_params_t {
    hmm_vec3 scene_ambient_color;
    uint8_t _pad_12[4];
    hmm_vec3 material_ambient_tint;
    uint8_t _pad_28[4];
    hmm_vec3 material_diffuse_tint;
    uint8_t _pad_44[4];
    hmm_vec3 light_ambient_color;
    uint8_t _pad_60[4];
    hmm_vec3 light_diffuse_color;
    uint8_t _pad_76[4];
    hmm_vec3 light_position;
    float light_range;
    float is_fog_enabled;
    uint8_t _pad_100[12];
    hmm_vec3 fog_color;
    float fog_start;
    float fog_end;
    uint8_t _pad_132[12];
} main_shader_fs_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 main_shader_vs_params[17];
    layout(location = 0) in vec3 position;
    out vec3 vs_world_position;
    out vec3 vs_view_position;
    out vec3 vs_unscaled_normal;
    layout(location = 1) in vec3 normal;
    out vec2 vs_uv;
    layout(location = 2) in vec2 texcoord0;
    
    void main()
    {
        vec4 _20 = vec4(position, 1.0);
        vs_world_position = vec3((mat4(main_shader_vs_params[0], main_shader_vs_params[1], main_shader_vs_params[2], main_shader_vs_params[3]) * _20).xyz);
        vs_view_position = vec3((mat4(main_shader_vs_params[4], main_shader_vs_params[5], main_shader_vs_params[6], main_shader_vs_params[7]) * _20).xyz);
        vs_unscaled_normal = normalize(vec3((mat4(main_shader_vs_params[12], main_shader_vs_params[13], main_shader_vs_params[14], main_shader_vs_params[15]) * vec4(normal, 0.0)).xyz));
        vs_uv = texcoord0 + main_shader_vs_params[16].xy;
        gl_Position = mat4(main_shader_vs_params[8], main_shader_vs_params[9], main_shader_vs_params[10], main_shader_vs_params[11]) * _20;
    }
    
*/
static const char main_shader_vs_source_glsl330[1000] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6d,0x61,0x69,0x6e,0x5f,
    0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x37,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x73,0x5f,
    0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x76,
    0x73,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x30,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x28,0x6d,
    0x61,0x74,0x34,0x28,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x61,
    0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,
    0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,
    0x2c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,
    0x30,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,0x5f,
    0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x6d,0x61,0x69,0x6e,0x5f,
    0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x34,0x5d,0x2c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x6d,
    0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,
    0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,
    0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,0x30,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x76,0x65,0x63,0x33,0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x6d,0x61,
    0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x2c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,
    0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x33,0x5d,0x2c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x2c,0x20,0x6d,
    0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x35,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,
    0x79,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,0x5f,0x75,0x76,0x20,
    0x3d,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x2b,0x20,0x6d,0x61,
    0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x36,0x5d,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,
    0x74,0x34,0x28,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x6d,0x61,0x69,
    0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,
    0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,
    0x2c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x5f,
    0x32,0x30,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 main_shader_fs_params[9];
    uniform sampler2D tex;
    
    in vec2 vs_uv;
    in vec3 vs_world_position;
    in vec3 vs_unscaled_normal;
    in vec3 vs_view_position;
    layout(location = 0) out vec4 frag_color;
    
    void main()
    {
        vec4 _21 = texture(tex, vs_uv);
        vec3 diffuse_color = vec3(0.0);
        vec3 _56 = main_shader_fs_params[5].xyz - vs_world_position;
        if (length(_56) < main_shader_fs_params[5].w)
        {
            diffuse_color = (main_shader_fs_params[2].xyz * main_shader_fs_params[4].xyz) * max(dot(normalize(vs_unscaled_normal), normalize(_56)), 0.0);
        }
        vec3 out_color = ((main_shader_fs_params[1].xyz * (main_shader_fs_params[0].xyz + main_shader_fs_params[3].xyz)) + diffuse_color) * _21.xyz;
        if (main_shader_fs_params[6].x > 0.0)
        {
            out_color = mix(main_shader_fs_params[7].xyz, out_color, vec3(clamp((main_shader_fs_params[8].x - vs_view_position.z) / (main_shader_fs_params[8].x - main_shader_fs_params[7].w), 0.0, 1.0)));
        }
        frag_color = vec4(out_color, _21.w);
    }
    
*/
static const char main_shader_fs_source_glsl330[1023] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6d,0x61,0x69,0x6e,0x5f,
    0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x39,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x3b,0x0a,0x0a,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x32,0x20,0x76,0x73,0x5f,0x75,0x76,0x3b,0x0a,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x73,0x5f,0x76,0x69,
    0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x32,0x31,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,
    0x2c,0x20,0x76,0x73,0x5f,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x36,0x20,0x3d,0x20,0x6d,0x61,0x69,
    0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x35,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x76,0x73,0x5f,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x35,
    0x36,0x29,0x20,0x3c,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2e,0x77,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,
    0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x6d,
    0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x6d,
    0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x5f,0x35,0x36,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6f,0x75,0x74,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x28,0x6d,0x61,0x69,0x6e,0x5f,0x73,
    0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x6d,0x61,0x69,0x6e,0x5f,0x73,
    0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,
    0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,
    0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2b,0x20,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x20,0x2a,0x20,0x5f,0x32,0x31,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x6d,0x61,0x69,0x6e,
    0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x36,0x5d,0x2e,0x78,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x6d,0x61,0x69,0x6e,
    0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x37,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x6f,0x75,0x74,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,
    0x28,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2e,0x78,0x20,0x2d,0x20,0x76,0x73,
    0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,
    0x29,0x20,0x2f,0x20,0x28,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2e,0x78,0x20,
    0x2d,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x2e,0x77,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x6f,0x75,0x74,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2c,0x20,0x5f,0x32,0x31,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    cbuffer main_shader_vs_params : register(b0)
    {
        row_major float4x4 _27_local_to_world_matrix : packoffset(c0);
        row_major float4x4 _27_local_to_view_matrix : packoffset(c4);
        row_major float4x4 _27_local_to_projection_matrix : packoffset(c8);
        row_major float4x4 _27_transpose_world_to_local_matrix : packoffset(c12);
        float2 _27_uv_offset : packoffset(c16);
    };
    
    
    static float4 gl_Position;
    static float3 position;
    static float3 vs_world_position;
    static float3 vs_view_position;
    static float3 vs_unscaled_normal;
    static float3 normal;
    static float2 vs_uv;
    static float2 texcoord0;
    
    struct SPIRV_Cross_Input
    {
        float3 position : TEXCOORD0;
        float3 normal : TEXCOORD1;
        float2 texcoord0 : TEXCOORD2;
    };
    
    struct SPIRV_Cross_Output
    {
        float3 vs_world_position : TEXCOORD0;
        float3 vs_view_position : TEXCOORD1;
        float3 vs_unscaled_normal : TEXCOORD2;
        float2 vs_uv : TEXCOORD3;
        float4 gl_Position : SV_Position;
    };
    
    #line 24 "shader.glsl"
    void vert_main()
    {
    #line 24 "shader.glsl"
        float4 _20 = float4(position, 1.0f);
    #line 25 "shader.glsl"
        vs_world_position = float3(mul(_20, _27_local_to_world_matrix).xyz);
    #line 26 "shader.glsl"
        vs_view_position = float3(mul(_20, _27_local_to_view_matrix).xyz);
    #line 27 "shader.glsl"
        vs_unscaled_normal = normalize(float3(mul(float4(normal, 0.0f), _27_transpose_world_to_local_matrix).xyz));
    #line 28 "shader.glsl"
        vs_uv = texcoord0 + _27_uv_offset;
    #line 29 "shader.glsl"
        gl_Position = mul(_20, _27_local_to_projection_matrix);
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        position = stage_input.position;
        normal = stage_input.normal;
        texcoord0 = stage_input.texcoord0;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.vs_world_position = vs_world_position;
        stage_output.vs_view_position = vs_view_position;
        stage_output.vs_unscaled_normal = vs_unscaled_normal;
        stage_output.vs_uv = vs_uv;
        return stage_output;
    }
*/
static const char main_shader_vs_source_hlsl5[2024] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,
    0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,
    0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x32,0x37,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,
    0x74,0x6f,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,
    0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x32,0x37,0x5f,0x6c,0x6f,0x63,
    0x61,0x6c,0x5f,0x74,0x6f,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6d,0x61,0x74,0x72,0x69,
    0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,
    0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,
    0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x32,0x37,0x5f,0x6c,
    0x6f,0x63,0x61,0x6c,0x5f,0x74,0x6f,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x78,0x34,0x20,0x5f,0x32,0x37,0x5f,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,
    0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x74,0x6f,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,
    0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x63,0x31,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x5f,0x32,0x37,0x5f,0x75,0x76,0x5f,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x31,0x36,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,
    0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,
    0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x30,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x32,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,
    0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x75,
    0x76,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,
    0x34,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x34,0x20,0x22,0x73,0x68,0x61,
    0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x30,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x66,
    0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x35,0x20,0x22,0x73,0x68,0x61,
    0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,
    0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x6d,0x75,0x6c,0x28,0x5f,0x32,0x30,
    0x2c,0x20,0x5f,0x32,0x37,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x74,0x6f,0x5f,0x77,
    0x6f,0x72,0x6c,0x64,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x29,0x2e,0x78,0x79,0x7a,
    0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x36,0x20,0x22,0x73,0x68,0x61,
    0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,
    0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x6d,0x75,0x6c,0x28,0x5f,0x32,0x30,0x2c,
    0x20,0x5f,0x32,0x37,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x74,0x6f,0x5f,0x76,0x69,
    0x65,0x77,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x37,0x20,0x22,0x73,0x68,0x61,0x64,0x65,
    0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,0x5f,0x75,
    0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x32,0x37,0x5f,
    0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,
    0x74,0x6f,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x38,
    0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x73,0x5f,0x75,0x76,0x20,0x3d,0x20,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x20,0x2b,0x20,0x5f,0x32,0x37,0x5f,0x75,0x76,0x5f,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x39,0x20,0x22,
    0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,
    0x75,0x6c,0x28,0x5f,0x32,0x30,0x2c,0x20,0x5f,0x32,0x37,0x5f,0x6c,0x6f,0x63,0x61,
    0x6c,0x5f,0x74,0x6f,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x5f,
    0x6d,0x61,0x74,0x72,0x69,0x78,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,
    0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,
    0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x76,0x73,0x5f,
    0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x76,0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x2e,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,
    0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x76,0x73,0x5f,
    0x75,0x76,0x20,0x3d,0x20,0x76,0x73,0x5f,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    cbuffer main_shader_fs_params : register(b0)
    {
        float3 _33_scene_ambient_color : packoffset(c0);
        float3 _33_material_ambient_tint : packoffset(c1);
        float3 _33_material_diffuse_tint : packoffset(c2);
        float3 _33_light_ambient_color : packoffset(c3);
        float3 _33_light_diffuse_color : packoffset(c4);
        float3 _33_light_position : packoffset(c5);
        float _33_light_range : packoffset(c5.w);
        float _33_is_fog_enabled : packoffset(c6);
        float3 _33_fog_color : packoffset(c7);
        float _33_fog_start : packoffset(c7.w);
        float _33_fog_end : packoffset(c8);
    };
    
    Texture2D<float4> tex : register(t0);
    SamplerState _tex_sampler : register(s0);
    
    static float2 vs_uv;
    static float3 vs_world_position;
    static float3 vs_unscaled_normal;
    static float3 vs_view_position;
    static float4 frag_color;
    
    struct SPIRV_Cross_Input
    {
        float3 vs_world_position : TEXCOORD0;
        float3 vs_view_position : TEXCOORD1;
        float3 vs_unscaled_normal : TEXCOORD2;
        float2 vs_uv : TEXCOORD3;
    };
    
    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };
    
    #line 33 "shader.glsl"
    void frag_main()
    {
    #line 33 "shader.glsl"
        float4 _21 = tex.Sample(_tex_sampler, vs_uv);
    #line 36 "shader.glsl"
    #line 38 "shader.glsl"
        float3 diffuse_color = 0.0f.xxx;
    #line 40 "shader.glsl"
        float3 _56 = _33_light_position - vs_world_position;
        if (length(_56) < _33_light_range)
        {
    #line 42 "shader.glsl"
    #line 43 "shader.glsl"
    #line 44 "shader.glsl"
    #line 43 "shader.glsl"
    #line 44 "shader.glsl"
            diffuse_color = (_33_material_diffuse_tint * _33_light_diffuse_color) * max(dot(normalize(vs_unscaled_normal), normalize(_56)), 0.0f);
        }
        float3 out_color = ((_33_material_ambient_tint * (_33_scene_ambient_color + _33_light_ambient_color)) + diffuse_color) * _21.xyz;
    #line 49 "shader.glsl"
        if (_33_is_fog_enabled > 0.0f)
        {
    #line 50 "shader.glsl"
            out_color = lerp(_33_fog_color, out_color, clamp((_33_fog_end - vs_view_position.z) / (_33_fog_end - _33_fog_start), 0.0f, 1.0f).xxx);
        }
    #line 53 "shader.glsl"
        frag_color = float4(out_color, _21.w);
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        vs_uv = stage_input.vs_uv;
        vs_world_position = stage_input.vs_world_position;
        vs_unscaled_normal = stage_input.vs_unscaled_normal;
        vs_view_position = stage_input.vs_view_position;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const char main_shader_fs_source_hlsl5[2474] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,
    0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,
    0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x33,0x5f,0x73,0x63,
    0x65,0x6e,0x65,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,
    0x33,0x33,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x61,0x6d,0x62,0x69,
    0x65,0x6e,0x74,0x5f,0x74,0x69,0x6e,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x33,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x69,0x6e,0x74,0x20,
    0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x32,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x33,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x33,0x33,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x33,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x72,0x61,0x6e,0x67,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x35,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,0x5f,0x69,0x73,0x5f,0x66,0x6f,0x67,0x5f,0x65,
    0x6e,0x61,0x62,0x6c,0x65,0x64,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x63,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x33,0x33,0x5f,0x66,0x6f,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,
    0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,
    0x33,0x5f,0x66,0x6f,0x67,0x5f,0x73,0x74,0x61,0x72,0x74,0x20,0x3a,0x20,0x70,0x61,
    0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x37,0x2e,0x77,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,0x5f,0x66,0x6f,
    0x67,0x5f,0x65,0x6e,0x64,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x38,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x74,0x65,
    0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,
    0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x5f,
    0x74,0x65,0x78,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x3a,0x20,0x72,0x65,
    0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x75,0x76,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x76,0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x76,0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,
    0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x75,0x76,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,
    0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x33,0x33,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,
    0x33,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x5f,0x74,0x65,0x78,
    0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x76,0x73,0x5f,0x75,0x76,0x29,
    0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x36,0x20,0x22,0x73,0x68,0x61,0x64,
    0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,
    0x38,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x30,0x2e,0x30,0x66,0x2e,
    0x78,0x78,0x78,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x30,0x20,0x22,0x73,
    0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x36,0x20,0x3d,0x20,0x5f,0x33,0x33,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x2d,0x20,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x6c,0x65,0x6e,
    0x67,0x74,0x68,0x28,0x5f,0x35,0x36,0x29,0x20,0x3c,0x20,0x5f,0x33,0x33,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x72,0x61,0x6e,0x67,0x65,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x32,0x20,0x22,0x73,0x68,0x61,0x64,
    0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,
    0x33,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x34,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x33,0x20,
    0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,
    0x69,0x6e,0x65,0x20,0x34,0x34,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x5f,0x33,
    0x33,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x5f,0x74,0x69,0x6e,0x74,0x20,0x2a,0x20,0x5f,0x33,0x33,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x29,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,
    0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x35,0x36,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x6f,0x75,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x28,0x28,0x5f,0x33,0x33,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,
    0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x74,0x69,0x6e,0x74,0x20,0x2a,0x20,0x28,
    0x5f,0x33,0x33,0x5f,0x73,0x63,0x65,0x6e,0x65,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,
    0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2b,0x20,0x5f,0x33,0x33,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x29,0x29,0x20,0x2b,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x29,0x20,0x2a,0x20,0x5f,0x32,0x31,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x39,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x33,0x33,0x5f,0x69,0x73,0x5f,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x61,0x62,0x6c,0x65,
    0x64,0x20,0x3e,0x20,0x30,0x2e,0x30,0x66,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x35,0x30,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x6c,0x65,0x72,0x70,0x28,
    0x5f,0x33,0x33,0x5f,0x66,0x6f,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x6f,
    0x75,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,
    0x28,0x5f,0x33,0x33,0x5f,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x64,0x20,0x2d,0x20,0x76,
    0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,
    0x7a,0x29,0x20,0x2f,0x20,0x28,0x5f,0x33,0x33,0x5f,0x66,0x6f,0x67,0x5f,0x65,0x6e,
    0x64,0x20,0x2d,0x20,0x5f,0x33,0x33,0x5f,0x66,0x6f,0x67,0x5f,0x73,0x74,0x61,0x72,
    0x74,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2e,
    0x78,0x78,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x35,0x33,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,
    0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6f,0x75,0x74,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x5f,0x32,0x31,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,
    0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,
    0x5f,0x75,0x76,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x2e,0x76,0x73,0x5f,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,0x5f,
    0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x73,0x5f,
    0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x2e,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,0x5f,
    0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x73,0x5f,0x76,
    0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,
    0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct main_shader_vs_params
    {
        float4x4 local_to_world_matrix;
        float4x4 local_to_view_matrix;
        float4x4 local_to_projection_matrix;
        float4x4 transpose_world_to_local_matrix;
        float2 uv_offset;
    };
    
    struct main0_out
    {
        float3 vs_world_position [[user(locn0)]];
        float3 vs_view_position [[user(locn1)]];
        float3 vs_unscaled_normal [[user(locn2)]];
        float2 vs_uv [[user(locn3)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 position [[attribute(0)]];
        float3 normal [[attribute(1)]];
        float2 texcoord0 [[attribute(2)]];
    };
    
    #line 24 "shader.glsl"
    vertex main0_out main0(main0_in in [[stage_in]], constant main_shader_vs_params& _27 [[buffer(0)]])
    {
        main0_out out = {};
    #line 24 "shader.glsl"
        float4 _20 = float4(in.position, 1.0);
    #line 25 "shader.glsl"
        out.vs_world_position = float3((_27.local_to_world_matrix * _20).xyz);
    #line 26 "shader.glsl"
        out.vs_view_position = float3((_27.local_to_view_matrix * _20).xyz);
    #line 27 "shader.glsl"
        out.vs_unscaled_normal = normalize(float3((_27.transpose_world_to_local_matrix * float4(in.normal, 0.0)).xyz));
    #line 28 "shader.glsl"
        out.vs_uv = in.texcoord0 + _27.uv_offset;
    #line 29 "shader.glsl"
        out.gl_Position = _27.local_to_projection_matrix * _20;
        return out;
    }
    
*/
static const char main_shader_vs_source_metal_macos[1374] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x78,0x34,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x74,0x6f,0x5f,0x77,0x6f,0x72,
    0x6c,0x64,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x74,0x6f,
    0x5f,0x76,0x69,0x65,0x77,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6c,0x6f,0x63,0x61,0x6c,
    0x5f,0x74,0x6f,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x5f,0x6d,
    0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x78,0x34,0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x5f,0x77,0x6f,
    0x72,0x6c,0x64,0x5f,0x74,0x6f,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x6d,0x61,0x74,
    0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x75,0x76,0x5f,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,
    0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,
    0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x76,0x69,
    0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,
    0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,
    0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x75,0x76,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,
    0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,
    0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,
    0x69,0x6e,0x65,0x20,0x32,0x34,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,
    0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,
    0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x37,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x34,0x20,0x22,0x73,0x68,0x61,
    0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x30,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x35,0x20,0x22,0x73,
    0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x28,
    0x5f,0x32,0x37,0x2e,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x74,0x6f,0x5f,0x77,0x6f,0x72,
    0x6c,0x64,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x5f,0x32,0x30,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x36,0x20,
    0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x28,0x5f,0x32,0x37,0x2e,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x74,0x6f,0x5f,0x76,0x69,
    0x65,0x77,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x5f,0x32,0x30,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x37,0x20,
    0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,
    0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x28,0x5f,0x32,0x37,
    0x2e,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x5f,0x77,0x6f,0x72,0x6c,0x64,
    0x5f,0x74,0x6f,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x6d,0x61,0x74,0x72,0x69,0x78,
    0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,
    0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x38,0x20,0x22,0x73,0x68,0x61,0x64,
    0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,
    0x2e,0x76,0x73,0x5f,0x75,0x76,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x20,0x2b,0x20,0x5f,0x32,0x37,0x2e,0x75,0x76,0x5f,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x39,0x20,
    0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x5f,0x32,0x37,0x2e,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x74,0x6f,
    0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x5f,0x6d,0x61,0x74,0x72,
    0x69,0x78,0x20,0x2a,0x20,0x5f,0x32,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct main_shader_fs_params
    {
        float3 scene_ambient_color;
        float3 material_ambient_tint;
        float3 material_diffuse_tint;
        float3 light_ambient_color;
        float3 light_diffuse_color;
        packed_float3 light_position;
        float light_range;
        float is_fog_enabled;
        char _m8_pad[12];
        packed_float3 fog_color;
        float fog_start;
        float fog_end;
    };
    
    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 vs_world_position [[user(locn0)]];
        float3 vs_view_position [[user(locn1)]];
        float3 vs_unscaled_normal [[user(locn2)]];
        float2 vs_uv [[user(locn3)]];
    };
    
    #line 33 "shader.glsl"
    fragment main0_out main0(main0_in in [[stage_in]], constant main_shader_fs_params& _33 [[buffer(0)]], texture2d<float> tex [[texture(0)]], sampler texSmplr [[sampler(0)]])
    {
        main0_out out = {};
    #line 33 "shader.glsl"
        float4 _21 = tex.sample(texSmplr, in.vs_uv);
    #line 36 "shader.glsl"
    #line 38 "shader.glsl"
        float3 diffuse_color = float3(0.0);
    #line 40 "shader.glsl"
        float3 _56 = float3(_33.light_position) - in.vs_world_position;
        if (length(_56) < _33.light_range)
        {
    #line 42 "shader.glsl"
    #line 43 "shader.glsl"
    #line 44 "shader.glsl"
    #line 43 "shader.glsl"
    #line 44 "shader.glsl"
            diffuse_color = (_33.material_diffuse_tint * _33.light_diffuse_color) * fast::max(dot(normalize(in.vs_unscaled_normal), normalize(_56)), 0.0);
        }
        float3 out_color = ((_33.material_ambient_tint * (_33.scene_ambient_color + _33.light_ambient_color)) + diffuse_color) * _21.xyz;
    #line 49 "shader.glsl"
        if (_33.is_fog_enabled > 0.0)
        {
    #line 50 "shader.glsl"
            out_color = mix(float3(_33.fog_color), out_color, float3(fast::clamp((_33.fog_end - in.vs_view_position.z) / (_33.fog_end - _33.fog_start), 0.0, 1.0)));
        }
    #line 53 "shader.glsl"
        out.frag_color = float4(out_color, _21.w);
        return out;
    }
    
*/
static const char main_shader_fs_source_metal_macos[1962] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x73,0x63,0x65,0x6e,0x65,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x5f,0x74,0x69,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x69,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,
    0x65,0x6e,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,
    0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x72,0x61,0x6e,
    0x67,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x69,0x73,
    0x5f,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x61,0x62,0x6c,0x65,0x64,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x63,0x68,0x61,0x72,0x20,0x5f,0x6d,0x38,0x5f,0x70,0x61,0x64,0x5b,0x31,
    0x32,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x6f,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x73,
    0x74,0x61,0x72,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x66,0x6f,0x67,0x5f,0x65,0x6e,0x64,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,
    0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,
    0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x76,0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x76,0x73,0x5f,0x75,0x6e,0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,
    0x73,0x5f,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,
    0x33,0x33,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,
    0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x5f,0x73,0x68,0x61,0x64,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x26,0x20,0x5f,0x33,0x33,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,
    0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,
    0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x74,0x65,0x78,0x20,0x5b,0x5b,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x20,0x74,0x65,0x78,0x53,0x6d,0x70,0x6c,0x72,0x20,0x5b,0x5b,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x33,0x20,
    0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x74,0x65,0x78,0x53,0x6d,0x70,
    0x6c,0x72,0x2c,0x20,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x75,0x76,0x29,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x33,0x36,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x38,0x20,0x22,
    0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x30,0x20,0x22,0x73,
    0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x36,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x5f,0x33,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x20,0x2d,0x20,0x69,0x6e,0x2e,0x76,0x73,0x5f,
    0x77,0x6f,0x72,0x6c,0x64,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,
    0x35,0x36,0x29,0x20,0x3c,0x20,0x5f,0x33,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x72,0x61,0x6e,0x67,0x65,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x23,0x6c,0x69,
    0x6e,0x65,0x20,0x34,0x32,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,
    0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x33,0x20,0x22,0x73,0x68,
    0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x34,0x34,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,
    0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x33,0x20,0x22,0x73,0x68,0x61,0x64,
    0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,
    0x34,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x5f,0x33,0x33,0x2e,0x6d,0x61,0x74,
    0x65,0x72,0x69,0x61,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x69,
    0x6e,0x74,0x20,0x2a,0x20,0x5f,0x33,0x33,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x20,0x2a,0x20,
    0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x75,0x6e,
    0x73,0x63,0x61,0x6c,0x65,0x64,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x35,0x36,0x29,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6f,0x75,0x74,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x28,0x28,0x5f,0x33,0x33,0x2e,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x74,0x69,0x6e,0x74,0x20,
    0x2a,0x20,0x28,0x5f,0x33,0x33,0x2e,0x73,0x63,0x65,0x6e,0x65,0x5f,0x61,0x6d,0x62,
    0x69,0x65,0x6e,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2b,0x20,0x5f,0x33,0x33,
    0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x29,0x29,0x20,0x2b,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x20,0x2a,0x20,0x5f,0x32,0x31,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x39,0x20,0x22,0x73,0x68,0x61,
    0x64,0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x33,0x33,0x2e,0x69,0x73,0x5f,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x61,
    0x62,0x6c,0x65,0x64,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x35,0x30,0x20,0x22,0x73,0x68,0x61,0x64,
    0x65,0x72,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x6f,0x75,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x6d,0x69,0x78,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x33,0x33,0x2e,0x66,0x6f,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x29,0x2c,0x20,0x6f,0x75,0x74,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x5f,0x33,0x33,0x2e,0x66,0x6f,0x67,0x5f,0x65,
    0x6e,0x64,0x20,0x2d,0x20,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x76,0x69,0x65,0x77,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x29,0x20,0x2f,0x20,0x28,0x5f,
    0x33,0x33,0x2e,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x64,0x20,0x2d,0x20,0x5f,0x33,0x33,
    0x2e,0x66,0x6f,0x67,0x5f,0x73,0x74,0x61,0x72,0x74,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x35,0x33,0x20,0x22,0x73,0x68,0x61,0x64,0x65,0x72,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x28,0x6f,0x75,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x5f,0x32,
    0x31,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before shader.h"
#endif
static inline const sg_shader_desc* main_shader_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "normal";
      desc.attrs[2].name = "texcoord0";
      desc.vs.source = main_shader_vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 272;
      desc.vs.uniform_blocks[0].uniforms[0].name = "main_shader_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 17;
      desc.fs.source = main_shader_fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].uniforms[0].name = "main_shader_fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 9;
      desc.fs.images[0].name = "tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "main_shader_shader";
    };
    return &desc;
  }
  if (backend == SG_BACKEND_D3D11) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].sem_name = "TEXCOORD";
      desc.attrs[0].sem_index = 0;
      desc.attrs[1].sem_name = "TEXCOORD";
      desc.attrs[1].sem_index = 1;
      desc.attrs[2].sem_name = "TEXCOORD";
      desc.attrs[2].sem_index = 2;
      desc.vs.source = main_shader_vs_source_hlsl5;
      desc.vs.d3d11_target = "vs_5_0";
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 272;
      desc.fs.source = main_shader_fs_source_hlsl5;
      desc.fs.d3d11_target = "ps_5_0";
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.images[0].name = "tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "main_shader_shader";
    };
    return &desc;
  }
  if (backend == SG_BACKEND_METAL_MACOS) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = main_shader_vs_source_metal_macos;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 272;
      desc.fs.source = main_shader_fs_source_metal_macos;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.images[0].name = "tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "main_shader_shader";
    };
    return &desc;
  }
  return 0;
}
