
include Constants
include RefTitle

dim iInit
dim Chars[150]

dim iLMeshes
dim iLMesh[150]

dim iTime

dim iFNumber[10]
dim iSNumber[10]

dim iDoneTitle

dim iJMPic
dim iJMPanel
dim iJMCount[10]

dim iLives

Sub Main()
  dim iKey
  dim iNum

  if iInit=1
    
  end if

  if iInit=0
'    SetExt(#Event1,-100)
    iNum=0
    while iNum<10
      iFNumber[iNum]=NewCharMesh(48+iNum)
      iSNumber[iNum]=NewCharMesh(48+iNum)
      iJMCount[iNum]=NewCharMesh(48+iNum)
      iNum=iNum+1
    loop
    PrioritizeObject()
    InitializeLetters()
    iInit=1

    iJMPic=NewCharMesh(94)
    iJMPanel=NewCharMesh(37)
  end if

  iLives=getext(#LivesRemaining)  

  if iLives>0
    ShowRemaining()
  end if
  ShowPerformance()

  if iDoneTitle=0
    iTime=GetExt(#Event1)
    if iTime<1000
      ShowLetters()
    end if
  end if

end sub

sub ShowRemaining()
  dim iTT
  
  iTT=GetExt(#textures)-2

  SelectObjectMesh(iJMPanel)
  SetProperties(iTT,0)
  Identity()
  Scale(16,8,1)
  Translate(44,-34,92)
  Perspective()
 
  SelectObjectMesh(iJMPic)
  SetProperties(0,1)
  Identity()
  Scale(.5,.5,.5)
  Translate(40,-34,90)
  Perspective()
end sub

sub ShowPerformance()
  dim iFirst
  dim iSecond
  dim iTT
  
  iTT=GetExt(#textures)-1

  dim iPerf
  iPerf=getext(#Performance)
  
  while iPerf>9
    iFirst=iFirst+1
    iPerf=iPerf-10
  loop  

  iSecond=iPerf

  dim iNum

  iNum=0
  while iNum<10
    SelectObjectMesh(iJMCount[iNum])
    if iNum=iLives && iLives>0
      SetProperties(iTT,1)
      Identity()
      Scale(.5,.5,.2)
      Translate(47,-33,90)
      Perspective()
    else
      SetProperties(0,0)
    end if
    SelectObjectMesh(iFNumber[iNum])
    if iNum=iFirst && getext(#ShowFPS)
      SetProperties(iTT,1)
      Identity()
      Translate(-40,30,90)
      Perspective()
    else
      SetProperties(0,0)
    end if
    SelectObjectMesh(iSNumber[iNum])
    if iNum=iSecond && getext(#ShowFPS)
      SetProperties(iTT,1)
      Identity()
      Translate(-34,30,90)
      Perspective()
    else
      SetProperties(0,0)
    end if
    iNum=iNum+1
  loop
  
end sub

sub ShowLetters()
  dim iLM
  dim iLast
  dim iTitle
  dim iCharWidth
  dim iFullWidth
  dim iTemp
  dim iMoveScale
  dim iTempTime
  dim iX
  dim iSomething

  iLast=-1
  iCharWidth=12
  iFullWidth=iCharWidth*iLMeshes
  iX=(iFullWidth/2)
  iX=iX-(iFullWidth/6)
  iX=iX-(iTime*3.2)

  iLM=0
  while iLM<iLMeshes
    if iLMesh[iLM]>0
      SelectObjectMesh(iLMesh[iLM])

      if iX>-90 && iX<90
        Identity()
        Scale(.16,.16,.16)
        Translate(0,0,5)
        RotateY(iX)
        Translate(0,0,8)
        Perspective()
        SetProperties(getext(#Textures)-1,1)
        iSomething=1
      else
        SetProperties(0,0)
      end if

    end if

    iX=iX+iCharWidth
    iLM=iLM+1
  loop

  if iSomething=0
    SetExt(#Event1,-100)
    iDoneTitle=1
  end if

end sub

sub InitializeLetters()
  dim iMesh
  dim iTit
  dim iChar
  dim iChars

  StrCopy(#TitleChars,"Flicker")
  Service(#Service_LevelTitle,#TitleChars)

  iChar=1
  iChars=Chars[0]
  while iChar<=iChars
    iLMesh[iLMeshes]=NewCharMesh(Chars[iTit*15+iChar])
    iLMeshes=iLMeshes+1
    iChar=iChar+1
  loop

end sub

