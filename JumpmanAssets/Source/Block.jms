include Constants
include Level14Resources
include RefBlock

dim iInit

dim Texture

dim iMesh[5]
dim iX[5]
dim iY[5]

dim iMyPlat

dim iStatus

dim Hung

dim iCount

Sub Main()

  if iInit=0
    iInit=1
    iMesh[1]=newMesh(#meshGoo)    
    iMesh[2]=newMesh(#meshGoo)    
    iMesh[3]=newMesh(#meshGoo)    
    iMesh[4]=newMesh(#meshGoo)    
    iStatus=0
  end if

  if Hung=0
    HangBlocks()
    Hung=1
  end if

  Move()

  DrawBlocks()

end Sub

sub Move()
  dim iLoop
  dim iTestX
  dim iTestY

  if iStatus=10

    iLoop=1
    while iLoop<5
      iY[iLoop]=iY[iLoop]-0.125    
      if iY[iLoop]=0
        iStatus=20
      end if
      iLoop=iLoop+1
    loop

    if TestCollide(0,1,1)
      iStatus=20
    end if
  end if

  if iStatus=5
    iCount=iCount+1
    if CheckFallers()
      iCount=0
    end if
    if iCount>30
      iStatus=10
    end if
  end if

  if iStatus=0
    iLoop=1
    while iLoop<5
      iTestX=iX[iLoop]*10+41+5
      iTestY=iY[iLoop]*10+4+5
      if Collide(iTestX-4,iTestY-4,iTestX+4,iTestY+4)
        iStatus=5
        iCount=0
      end if
      iLoop=iLoop+1        
    loop
  end if

end sub

sub CheckFallers()
  dim iTest
  dim iMyPart
  dim iTestPart
  dim iTestX
  dim iTestY
  dim iThis

  iThis=getext(#This)

  iTest=0
  while iTest<getext(#objects)
    if getData(iTest,#objType)=#ScriptBlock && (iThis!=iTest)

      iTestPart=1

      if getData(iTest,#BlockIStatus)<>10
        iTestPart=5
      end if

      while iTestPart<5
        iTestX=getData(iTest,#BlockIX+iTestPart)
        iTestY=getData(iTest,#BlockIY+ITestPart)
        iMyPart=1
        while iMyPart<5
          if iTestX=iX[iMyPart] 
            if abs(iTestY-iY[iMyPart])<3
              return 1
            end if
          end if
          iMyPart=iMyPart+1
        loop
        iTestPart=iTestPart+1
      loop

    end if

    iTest=iTest+1
  loop

  return 0
end sub

sub TestCollide(iVX,iVY,iOnlyFallen)
  dim iTest
  dim iMyPart
  dim iTestPart
  dim iTestX
  dim iTestY
  dim iThis

  iThis=getext(#This)

  iTest=0
  while iTest<getext(#objects)
    if getData(iTest,#objType)=#ScriptBlock && (iThis!=iTest)

      iTestPart=1

      if iOnlyFallen=1 && getData(iTest,#BlockIStatus)<>20
        iTestPart=5
      end if

      while iTestPart<5
        iTestX=getData(iTest,#BlockIX+iTestPart)+iVX
        iTestY=getData(iTest,#BlockIY+ITestPart)+iVY
        iMyPart=1
        while iMyPart<5
          if iTestX=iX[iMyPart] 
            if iTestY=iY[iMyPart]
              return 1
            end if
          end if
          iMyPart=iMyPart+1
        loop
        iTestPart=iTestPart+1
      loop

    end if

    iTest=iTest+1
  loop

  return 0
end sub

sub HangBlocks()
  dim iGood
  dim iLoop

  iLoop=1
  while iLoop<5
    iY[iLoop]=iY[iLoop]+4
    iLoop=iLoop+1
  loop  

  while iGood=0
    iLoop=1
    while iLoop<5
      iY[iLoop]=iY[iLoop]+1
      iLoop=iLoop+1
    loop  

    if TestCollide(0,0,0)       
    elseif TestCollide(0,0,0)  
    elseif TestCollide(0,-1,0)  
    elseif TestCollide(0,1,0)  
    else 
      iGood=1
    end if

  loop

  iLoop=1
  while iLoop<5
    SelectObjectMesh(iMesh[iLoop])
    SetProperties(Texture,1)
    iLoop=iLoop+1
  loop
    
end sub

sub Abs(iNum)
  if iNum<0
    return 0-iNum
  end if
  return iNum
end sub

sub DrawBlocks()
  dim iLoop
  dim iShake

  iShake=rnd(0,10)-5

  iLoop=1
  while iLoop<5
    SelectObjectMesh(iMesh[iLoop])
    Identity()
    Scale(10.2,10.2,3.8)

    if iStatus=5
      RotateZ(iShake)
      Translate(iX[iLoop]*10+41+5+rnd(0,2)-1,iY[iLoop]*10+4,2.5)
    else
      Translate(iX[iLoop]*10+41+5,iY[iLoop]*10+4,2.5)
    end if
    iLoop=iLoop+1
  loop

end sub
