BUILD_DIR = build

ENGINE_LIB = jumpman_engine
# Mac specific
ENGINE_LIB_BIN = lib$(ENGINE_LIB).dylib
GAME_BIN = JumpmanZero
GAME_APP = $(GAME_BIN).app
ENGINE_LIB_TEST_BIN = jumpman_engine_test
LEVELCONVERTER_BIN = jumpman_level_converter
MESHCONVERTER_BIN = jumpman_mesh_converter

ENGINE_LIB_VERSION = 0.1
SDL_VERSION = 2.0.4
SDL_IMAGE_VERSION = 2.0.1
GLM_VERSION = 0.9.8.0
LUA_VERSION = 5.3.3
SOL_VERSION = 2.14.9
FMOD_VERSION = 1.08.11
JSONCPP_VERSION = 1.7.5
TINY_OBJ_LOADER_VERSION = 1.0.0

EXTLIBS_DIR = extlibs

LUA_LIB = lua
FMOD_LIB = fmod
JSONCPP_LIB = jsoncpp.1
# Mac specific
FMOD_LIB_BIN = lib$(FMOD_LIB).dylib
# Mac specific
JSONCPP_LIB_BIN = lib$(JSONCPP_LIB).dylib
BOOST_SYSTEM_LIB = boost_system-mt
BOOST_FILESYSTEM_LIB = boost_filesystem-mt
BOOST_LOG_LIB = boost_log-mt
BOOST_THREAD_LIB = boost_thread-mt

# Mac specific
SDL_FRAMEWORK = SDL2
SDL_FRAMEWORK_BIN = $(SDL_FRAMEWORK).framework
SDL_IMAGE_FRAMEWORK = SDL2_image
SDL_IMAGE_FRAMEWORK_BIN = $(SDL_IMAGE_FRAMEWORK).framework
OPENGL_FRAMEWORK = OpenGL

SDL_DIR = $(EXTLIBS_DIR)/SDL2-$(SDL_VERSION)
SDL_IMAGE_DIR = $(EXTLIBS_DIR)/SDL2_image-$(SDL_IMAGE_VERSION)
GLM_DIR = $(EXTLIBS_DIR)/glm-$(GLM_VERSION)
LUA_DIR = $(EXTLIBS_DIR)/lua-$(LUA_VERSION)
SOL_DIR = $(EXTLIBS_DIR)/sol2-$(SOL_VERSION)
FMOD_DIR = $(EXTLIBS_DIR)/FMOD-$(FMOD_VERSION)
JSONCPP_DIR = $(EXTLIBS_DIR)/jsoncpp-$(JSONCPP_VERSION)
TINY_OBJ_LOADER_DIR = $(EXTLIBS_DIR)/tiny_obj_loader-$(TINY_OBJ_LOADER_VERSION)

GLM_INCLUDE_DIR = $(GLM_DIR)
LUA_INCLUDE_DIR = $(LUA_DIR)/src
LUA_LIB_DIR = $(LUA_DIR)/src
LUA_BIN_DIR = $(LUA_DIR)/src
SOL_INCLUDE_DIR = $(SOL_DIR)
FMOD_INCLUDE_DIR = $(FMOD_DIR)/api/lowlevel/inc
FMOD_LIB_DIR = $(FMOD_DIR)/api/lowlevel/lib
JSONCPP_INCLUDE_DIR = $(JSONCPP_DIR)/dist
JSONCPP_LIB_DIR = $(JSONCPP_DIR)/lib
TINY_OBJ_LOADER_INCLUDE_DIR = $(TINY_OBJ_LOADER_DIR)
SYSTEM_INCLUDE_DIR = /usr/local/include
SYSTEM_LIB_DIR = /usr/local/lib

# Mac specific
SDL_FRAMEWORKS_DIR = $(SDL_DIR)/Frameworks
SDL_IMAGE_FRAMEWORKS_DIR = $(SDL_IMAGE_DIR)/Frameworks
BOOST_INCLUDE_DIR = $(SYSTEM_INCLUDE_DIR)
BOOST_LIB_DIR = $(SYSTEM_LIB_DIR)

SOURCE_DIR = src
ENGINE_LIB_SOURCE_DIR = engine
ENGINE_LIB_OBJECTS_SOURCE_DIR = $(ENGINE_LIB_SOURCE_DIR)/objects
ENGINE_LIB_GRAPHICS_SOURCE_DIR = $(ENGINE_LIB_SOURCE_DIR)/graphics
ENGINE_LIB_SOUND_SOURCE_DIR = $(ENGINE_LIB_SOURCE_DIR)/sound
GAME_BIN_SOURCE_DIR = game
ENGINE_LIB_TEST_SOURCE_DIR = $(ENGINE_LIB_SOURCE_DIR)/test
LEVELCONVERTER_BIN_SOURCE_DIR = levelconverter
MESHCONVERTER_BIN_SOURCE_DIR = meshconverter

GAME_DATA_DIR = data

GAME_MOD_DIR = mod
GAME_LEVEL_DIR = level
GAME_MODEL_DIR = model
GAME_SCRIPT_DIR = script
GAME_TEXTURE_DIR = texture
GAME_SOUND_DIR = sound
GAME_MUSIC_DIR = music
GAME_SHADER_DIR = shader
GAME_TEXT_DIR = text
GAME_CONFIG_DIR = config

GAME_DATA_DIRS += $(GAME_MOD_DIR)
GAME_DATA_DIRS += $(GAME_LEVEL_DIR)
GAME_DATA_DIRS += $(GAME_MODEL_DIR)
GAME_DATA_DIRS += $(GAME_SCRIPT_DIR)
GAME_DATA_DIRS += $(GAME_TEXTURE_DIR)
GAME_DATA_DIRS += $(GAME_SOUND_DIR)
GAME_DATA_DIRS += $(GAME_MUSIC_DIR)
GAME_DATA_DIRS += $(GAME_SHADER_DIR)
GAME_DATA_DIRS += $(GAME_TEXT_DIR)
GAME_DATA_DIRS += $(GAME_CONFIG_DIR)
GAME_DATA_DIRS := $(addprefix $(GAME_DATA_DIR)/, $(GAME_DATA_DIRS))

ENGINE_LIB_CPP_SOURCES = $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_SOURCE_DIR)/*.cpp) $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_OBJECTS_SOURCE_DIR)/*.cpp) $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_GRAPHICS_SOURCE_DIR)/*.cpp) $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_SOUND_SOURCE_DIR)/*.cpp)
# Mac specific
ENGINE_LIB_MM_SOURCES = $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_SOURCE_DIR)/*.mm)
GAME_BIN_CPP_SOURCES = $(wildcard $(SOURCE_DIR)/$(GAME_BIN_SOURCE_DIR)/*.cpp)
ENGINE_LIB_TEST_CPP_SOURCES = $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_TEST_SOURCE_DIR)/*.cpp)
LEVELCONVERTER_CPP_SOURCES = $(wildcard $(SOURCE_DIR)/$(LEVELCONVERTER_BIN_SOURCE_DIR)/*.cpp)
MESHCONVERTER_CPP_SOURCES = $(wildcard $(SOURCE_DIR)/$(MESHCONVERTER_BIN_SOURCE_DIR)/*.cpp)

# Mac specific
ENGINE_LIB_CPP_SOURCES := $(filter-out $(SOURCE_DIR)/$(ENGINE_LIB_SOURCE_DIR)/resourcepath.cpp, $(ENGINE_LIB_CPP_SOURCES))

GAME_DATA_SOURCES = $(wildcard $(GAME_DATA_DIR)/*/*)

ENGINE_LIB_OBJECTS = $(patsubst $(SOURCE_DIR)/%.cpp, %.o, $(ENGINE_LIB_CPP_SOURCES))
# Mac specific
ENGINE_LIB_OBJECTS += $(patsubst $(SOURCE_DIR)/%.mm, %.o, $(ENGINE_LIB_MM_SOURCES))
GAME_BIN_OBJECTS = $(patsubst $(SOURCE_DIR)/%.cpp, %.o, $(GAME_BIN_CPP_SOURCES))
ENGINE_LIB_TEST_BIN_OBJECTS = $(patsubst $(SOURCE_DIR)/%.cpp, %.o, $(ENGINE_LIB_TEST_CPP_SOURCES))
LEVELCONVERTER_BIN_OBJECTS = $(patsubst $(SOURCE_DIR)/%.cpp, %.o, $(LEVELCONVERTER_CPP_SOURCES))
MESHCONVERTER_BIN_OBJECTS = $(patsubst $(SOURCE_DIR)/%.cpp, %.o, $(MESHCONVERTER_CPP_SOURCES))
OBJECTS = $(ENGINE_LIB_OBJECTS) $(ENGINE_LIB_OBJECTS) $(GAME_BIN_OBJECTS) $(ENGINE_LIB_TEST_BIN_OBJECTS) $(LEVELCONVERTER_BIN_OBJECTS) $(MESHCONVERTER_BIN_OBJECTS)
OBJECT_DIRS = $(dir $(OBJECTS))

GAME_BIN_RESOURCES = $(GAME_DATA_SOURCES)
# Mac specific
GAME_APP_RESOURCES = $(GAME_DATA_SOURCES)

CXXFLAGS = --std=c++14

ENGINE_LIB_CPPFLAGS = -I$(SOURCE_DIR) -I$(GLM_INCLUDE_DIR) -I$(LUA_INCLUDE_DIR) -I$(SOL_INCLUDE_DIR) -I$(FMOD_INCLUDE_DIR) -I$(JSONCPP_INCLUDE_DIR) -I$(TINY_OBJ_LOADER_INCLUDE_DIR) -I$(BOOST_INCLUDE_DIR) -I$(SYSTEM_INCLUDE_DIR)
ENGINE_LIB_LDFLAGS = -dynamiclib -install_name '@rpath/$(ENGINE_LIB_BIN)' -current_version $(ENGINE_LIB_VERSION) -L$(LUA_LIB_DIR) -L$(FMOD_LIB_DIR) -L$(JSONCPP_LIB_DIR) -L$(SYSTEM_LIB_DIR)
ENGINE_LIB_LDLIBS = -l$(LUA_LIB) -l$(FMOD_LIB) -l$(JSONCPP_LIB) -l$(BOOST_SYSTEM_LIB) -l$(BOOST_FILESYSTEM_LIB) -l$(BOOST_LOG_LIB) -l$(BOOST_THREAD_LIB)
GAME_BIN_CPPFLAGS = -I$(SOURCE_DIR) -I$(SYSTEM_INCLUDE_DIR)
GAME_BIN_LDLIBS = -l$(ENGINE_LIB)
ENGINE_LIB_TEST_BIN_CPPFLAGS = -I$(SOURCE_DIR) -I$(GLM_INCLUDE_DIR) -I$(JSONCPP_INCLUDE_DIR) -I$(SYSTEM_INCLUDE_DIR)
ENGINE_LIB_TEST_BIN_LDLIBS = -l$(ENGINE_LIB) -l$(JSONCPP_LIB)
LEVELCONVERTER_BIN_CPPFLAGS = -I$(SOURCE_DIR) -I$(BOOST_INCLUDE_DIR) -I$(SYSTEM_INCLUDE_DIR)
LEVELCONVERTER_BIN_LDFLAGS = -L$(SYSTEM_LIB_DIR)
LEVELCONVERTER_BIN_LDLIBS = -l$(ENGINE_LIB) -l$(BOOST_SYSTEM_LIB) -l$(BOOST_FILESYSTEM_LIB)
MESHCONVERTER_BIN_CPPFLAGS = -I$(SOURCE_DIR) -I$(BOOST_INCLUDE_DIR) -I$(SYSTEM_INCLUDE_DIR)
MESHCONVERTER_BIN_LDFLAGS = -L$(SYSTEM_LIB_DIR)
MESHCONVERTER_BIN_LDLIBS = -l$(ENGINE_LIB) -l$(BOOST_SYSTEM_LIB) -l$(BOOST_FILESYSTEM_LIB)

# Mac specific
DYNAMIC_LIBS = $(ENGINE_LIB_BIN) $(SDL_FRAMEWORK_BIN) $(SDL_IMAGE_FRAMEWORK_BIN) $(FMOD_LIB_BIN) $(JSONCPP_LIB_BIN)
ENGINE_LIB_CPPFLAGS += -F$(SDL_FRAMEWORKS_DIR) -F$(SDL_IMAGE_FRAMEWORKS_DIR)
ENGINE_LIB_LDLIBS += -framework $(SDL_FRAMEWORK) -framework $(SDL_IMAGE_FRAMEWORK) -framework $(OPENGL_FRAMEWORK) -fobjc-link-runtime
GAME_BIN_RPATH = @loader_path/.
GAME_BIN_LDFLAGS += -Xlinker -rpath -Xlinker $(GAME_BIN_RPATH)
ENGINE_LIB_TEST_BIN_LDFLAGS += -Xlinker -rpath -Xlinker @loader_path/.
GAME_APP_FRAMEWORKS = $(DYNAMIC_LIBS)
GAME_APP_RPATH = @loader_path/../Frameworks
LEVELCONVERTER_BIN_RPATH = @loader_path/.
LEVELCONVERTER_BIN_LDFLAGS += -Xlinker -rpath -Xlinker $(LEVELCONVERTER_BIN_RPATH)
MESHCONVERTER_BIN_RPATH = @loader_path/.
MESHCONVERTER_BIN_LDFLAGS += -Xlinker -rpath -Xlinker $(MESHCONVERTER_BIN_RPATH)

.PHONY: all clean release debug
.SECONDARY:

all: release

clean:
	$(RM) -r $(BUILD_DIR)

release: CPPFLAGS += -Os
debug: CPPFLAGS += -O0 -g -DDEBUG

release: $(BUILD_DIR)/release/$(ENGINE_LIB_BIN) $(BUILD_DIR)/release/$(GAME_BIN) $(BUILD_DIR)/release/$(ENGINE_LIB_TEST_BIN) $(BUILD_DIR)/release/$(LEVELCONVERTER_BIN) $(BUILD_DIR)/release/$(MESHCONVERTER_BIN)
# Mac specific
release: $(BUILD_DIR)/release/$(GAME_APP)
debug: $(BUILD_DIR)/debug/$(ENGINE_LIB_BIN) $(BUILD_DIR)/debug/$(GAME_BIN) $(BUILD_DIR)/debug/$(ENGINE_LIB_TEST_BIN) $(BUILD_DIR)/debug/$(LEVELCONVERTER_BIN) $(BUILD_DIR)/debug/$(MESHCONVERTER_BIN)
# Mac specific
debug: $(BUILD_DIR)/debug/$(GAME_APP)

$(BUILD_DIR)/release:
	mkdir -p $(addprefix $(BUILD_DIR)/release/, . $(OBJECT_DIRS) $(GAME_DATA_DIRS))

$(BUILD_DIR)/debug:
	mkdir -p $(addprefix $(BUILD_DIR)/debug/, . $(OBJECT_DIRS) $(GAME_DATA_DIRS))

$(BUILD_DIR)/%/$(ENGINE_LIB_BIN): CPPFLAGS += $(ENGINE_LIB_CPPFLAGS)
$(BUILD_DIR)/%/$(ENGINE_LIB_BIN): CXXFLAGS += $(ENGINE_LIB_CXXFLAGS)
$(BUILD_DIR)/%/$(ENGINE_LIB_BIN): LDFLAGS += $(ENGINE_LIB_LDFLAGS)
$(BUILD_DIR)/%/$(ENGINE_LIB_BIN): LDLIBS += $(ENGINE_LIB_LDLIBS)
$(BUILD_DIR)/%/$(ENGINE_LIB_BIN): $(addprefix $(BUILD_DIR)/%/, $(ENGINE_LIB_OBJECTS)) | $(BUILD_DIR)/%
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

$(BUILD_DIR)/%/$(GAME_BIN): CPPFLAGS += $(GAME_BIN_CPPFLAGS)
$(BUILD_DIR)/%/$(GAME_BIN): CXXFLAGS += $(GAME_BIN_CXXFLAGS)
$(BUILD_DIR)/%/$(GAME_BIN): LDFLAGS += $(GAME_BIN_LDFLAGS)
$(BUILD_DIR)/%/$(GAME_BIN): LDLIBS += $(GAME_BIN_LDLIBS)
$(BUILD_DIR)/%/$(GAME_BIN): $(addprefix $(BUILD_DIR)/%/, $(GAME_BIN_OBJECTS)) | $(BUILD_DIR)/% $(BUILD_DIR)/%/$(ENGINE_LIB_BIN) $(addprefix $(BUILD_DIR)/%/, $(DYNAMIC_LIBS)) $(addprefix $(BUILD_DIR)/%/, $(GAME_BIN_RESOURCES))
	$(LINK.cpp) -L$(BUILD_DIR)/$* $^ $(LOADLIBES) $(LDLIBS) -o $@

$(BUILD_DIR)/%/$(ENGINE_LIB_TEST_BIN): CPPFLAGS += $(ENGINE_LIB_TEST_BIN_CPPFLAGS)
$(BUILD_DIR)/%/$(ENGINE_LIB_TEST_BIN): CXXFLAGS += $(ENGINE_LIB_TEST_BIN_CXXFLAGS)
$(BUILD_DIR)/%/$(ENGINE_LIB_TEST_BIN): LDFLAGS += $(ENGINE_LIB_TEST_BIN_LDFLAGS)
$(BUILD_DIR)/%/$(ENGINE_LIB_TEST_BIN): LDLIBS += $(ENGINE_LIB_TEST_BIN_LDLIBS)
$(BUILD_DIR)/%/$(ENGINE_LIB_TEST_BIN): $(addprefix $(BUILD_DIR)/%/, $(ENGINE_LIB_TEST_BIN_OBJECTS)) | $(BUILD_DIR)/% $(BUILD_DIR)/%/$(ENGINE_LIB_BIN) $(addprefix $(BUILD_DIR)/%/, $(DYNAMIC_LIBS)) $(addprefix $(BUILD_DIR)/%/, $(GAME_BIN_RESOURCES))
	$(LINK.cpp) -L$(BUILD_DIR)/$* $^ $(LOADLIBES) $(LDLIBS) -o $@

$(BUILD_DIR)/%/$(LEVELCONVERTER_BIN): CPPFLAGS += $(LEVELCONVERTER_BIN_CPPFLAGS)
$(BUILD_DIR)/%/$(LEVELCONVERTER_BIN): CXXFLAGS += $(LEVELCONVERTER_BIN_CXXFLAGS)
$(BUILD_DIR)/%/$(LEVELCONVERTER_BIN): LDFLAGS += $(LEVELCONVERTER_BIN_LDFLAGS)
$(BUILD_DIR)/%/$(LEVELCONVERTER_BIN): LDLIBS += $(LEVELCONVERTER_BIN_LDLIBS)
$(BUILD_DIR)/%/$(LEVELCONVERTER_BIN): $(addprefix $(BUILD_DIR)/%/, $(LEVELCONVERTER_BIN_OBJECTS)) | $(BUILD_DIR)/% $(BUILD_DIR)/%/$(ENGINE_LIB_BIN) $(addprefix $(BUILD_DIR)/%/, $(DYNAMIC_LIBS))
	$(LINK.cpp) -L$(BUILD_DIR)/$* $^ $(LOADLIBES) $(LDLIBS) -o $@

$(BUILD_DIR)/%/$(MESHCONVERTER_BIN): CPPFLAGS += $(MESHCONVERTER_BIN_CPPFLAGS)
$(BUILD_DIR)/%/$(MESHCONVERTER_BIN): CXXFLAGS += $(MESHCONVERTER_BIN_CXXFLAGS)
$(BUILD_DIR)/%/$(MESHCONVERTER_BIN): LDFLAGS += $(MESHCONVERTER_BIN_LDFLAGS)
$(BUILD_DIR)/%/$(MESHCONVERTER_BIN): LDLIBS += $(MESHCONVERTER_BIN_LDLIBS)
$(BUILD_DIR)/%/$(MESHCONVERTER_BIN): $(addprefix $(BUILD_DIR)/%/, $(MESHCONVERTER_BIN_OBJECTS)) | $(BUILD_DIR)/% $(BUILD_DIR)/%/$(ENGINE_LIB_BIN) $(addprefix $(BUILD_DIR)/%/, $(DYNAMIC_LIBS))
	$(LINK.cpp) -L$(BUILD_DIR)/$* $^ $(LOADLIBES) $(LDLIBS) -o $@

$(BUILD_DIR)/release/$(FMOD_LIB_BIN): $(FMOD_LIB_DIR)/$(FMOD_LIB_BIN) | $(BUILD_DIR)/release
	cp $< $@

$(BUILD_DIR)/debug/$(FMOD_LIB_BIN): $(FMOD_LIB_DIR)/$(FMOD_LIB_BIN) | $(BUILD_DIR)/debug
	cp $< $@

$(BUILD_DIR)/release/$(JSONCPP_LIB_BIN): $(JSONCPP_LIB_DIR)/$(JSONCPP_LIB_BIN) | $(BUILD_DIR)/release
	cp $< $@

$(BUILD_DIR)/debug/$(JSONCPP_LIB_BIN): $(JSONCPP_LIB_DIR)/$(JSONCPP_LIB_BIN) | $(BUILD_DIR)/debug
	cp $< $@

# Mac specific
$(BUILD_DIR)/release/$(SDL_FRAMEWORK_BIN): $(SDL_FRAMEWORKS_DIR)/$(SDL_FRAMEWORK_BIN) | $(BUILD_DIR)/release
	cp -R $< $@

# Mac specific
$(BUILD_DIR)/debug/$(SDL_FRAMEWORK_BIN): $(SDL_FRAMEWORKS_DIR)/$(SDL_FRAMEWORK_BIN) | $(BUILD_DIR)/debug
	cp -R $< $@

# Mac specific
$(BUILD_DIR)/release/$(SDL_IMAGE_FRAMEWORK_BIN): $(SDL_IMAGE_FRAMEWORKS_DIR)/$(SDL_IMAGE_FRAMEWORK_BIN) | $(BUILD_DIR)/release
	cp -R $< $@

# Mac specific
$(BUILD_DIR)/debug/$(SDL_IMAGE_FRAMEWORK_BIN): $(SDL_IMAGE_FRAMEWORKS_DIR)/$(SDL_IMAGE_FRAMEWORK_BIN) | $(BUILD_DIR)/debug
	cp -R $< $@

# Mac specific
%/$(GAME_APP): %/$(GAME_APP)/Contents/MacOS/$(GAME_BIN) %/$(GAME_APP)/Contents $(addprefix %/$(GAME_APP)/Contents/Frameworks/, $(GAME_APP_FRAMEWORKS)) $(addprefix %/$(GAME_APP)/Contents/Resources/, $(GAME_APP_RESOURCES))
	@true

# Mac specific
%/$(GAME_APP)/Contents: $(SOURCE_DIR)/$(GAME_BIN_SOURCE_DIR)/Info.plist $(SOURCE_DIR)/$(GAME_BIN_SOURCE_DIR)/PkgInfo
	mkdir -p $(addprefix $@/, MacOS Frameworks Resources $(addprefix Resources/, $(GAME_DATA_DIRS)))
	cp $^ $@

# Mac specific
%/$(GAME_APP)/Contents/MacOS/$(GAME_BIN): %/$(GAME_BIN) | %/$(GAME_APP)/Contents
	cp $< $@
	install_name_tool -rpath "$(GAME_BIN_RPATH)" "$(GAME_APP_RPATH)" $@

%/$(GAME_APP)/Contents/Frameworks/$(ENGINE_LIB_BIN): %/$(ENGINE_LIB_BIN) | %/$(GAME_APP)/Contents
	cp $< $@

%/$(GAME_APP)/Contents/Frameworks/$(FMOD_LIB_BIN): %/$(FMOD_LIB_BIN) | %/$(GAME_APP)/Contents
	cp $< $@

%/$(GAME_APP)/Contents/Frameworks/$(JSONCPP_LIB_BIN): %/$(JSONCPP_LIB_BIN) | %/$(GAME_APP)/Contents
	cp $< $@

# Mac specific
%/$(GAME_APP)/Contents/Frameworks/$(SDL_FRAMEWORK_BIN): %/$(SDL_FRAMEWORK_BIN) | %/$(GAME_APP)/Contents
	cp -R $< $@

# Mac specific
%/$(GAME_APP)/Contents/Frameworks/$(SDL_IMAGE_FRAMEWORK_BIN): %/$(SDL_IMAGE_FRAMEWORK_BIN) | %/$(GAME_APP)/Contents
	cp -R $< $@

# Mac specific
$(BUILD_DIR)/release/%.o: $(SOURCE_DIR)/%.mm | $(BUILD_DIR)/release
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

$(BUILD_DIR)/release/%.o: $(SOURCE_DIR)/%.cpp | $(BUILD_DIR)/release
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

# Mac specific
$(BUILD_DIR)/debug/%.o: $(SOURCE_DIR)/%.mm | $(BUILD_DIR)/debug
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

$(BUILD_DIR)/debug/%.o: $(SOURCE_DIR)/%.cpp | $(BUILD_DIR)/debug
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

$(BUILD_DIR)/release/$(GAME_DATA_DIR)/%: $(GAME_DATA_DIR)/%
	cp $< $@

$(BUILD_DIR)/debug/$(GAME_DATA_DIR)/%: $(GAME_DATA_DIR)/%
	cp $< $@

# Mac specific
$(BUILD_DIR)/release/$(GAME_APP)/Contents/Resources/$(GAME_DATA_DIR)/%: $(GAME_DATA_DIR)/%
	cp $< $@

# Mac specific
$(BUILD_DIR)/debug/$(GAME_APP)/Contents/Resources/$(GAME_DATA_DIR)/%: $(GAME_DATA_DIR)/%
	cp $< $@
