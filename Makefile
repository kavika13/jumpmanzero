BUILD_DIR = build

ENGINE_LIB = jumpman_engine
ENGINE_LIB_TEST_BIN = jumpman_engine_test
GAME_BIN = JumpmanZero
GAME_APP = $(GAME_BIN).app

SDL_VERSION = 2.0.4
SDL_IMAGE_VERSION = 2.0.1
GLM_VERSION = 0.9.8.0
LUA_VERSION = 5.3.3
FMOD_VERSION = 1.08.11

EXTLIBS_DIR = extlibs

LUA_LIB = lua
FMOD_LIB = fmod
BOOST_SYSTEM_LIB = libboost_system-mt.a
BOOST_FILESYSTEM_LIB = libboost_filesystem-mt.a
BOOST_LOG_LIB = libboost_log-mt.a

# Mac specific
SDL_FRAMEWORK = SDL2
SDL_IMAGE_FRAMEWORK = SDL2_image
OPENGL_FRAMEWORK = OpenGL

SDL_DIR = $(EXTLIBS_DIR)/SDL2-$(SDL_VERSION)
SDL_IMAGE_DIR = $(EXTLIBS_DIR)/SDL2_image-$(SDL_IMAGE_VERSION)
GLM_DIR = $(EXTLIBS_DIR)/glm-$(GLM_VERSION)
LUA_DIR = $(EXTLIBS_DIR)/lua-$(LUA_VERSION)
FMOD_DIR = $(EXTLIBS_DIR)/FMOD-$(FMOD_VERSION)

GLM_INCLUDE_DIR = $(GLM_DIR)
LUA_INCLUDE_DIR = $(LUA_DIR)/src
LUA_LIB_DIR = $(LUA_DIR)/src
LUA_BIN_DIR = $(LUA_DIR)/src
FMOD_INCLUDE_DIR = $(FMOD_DIR)/api/lowlevel/inc
FMOD_LIB_DIR = $(FMOD_DIR)/api/lowlevel/lib
SYSTEM_INCLUDE_DIR = /usr/local/include
SYSTEM_LIB_DIR = /usr/local/lib

# Mac specific
SDL_FRAMEWORKS_DIR = $(SDL_DIR)/Frameworks
SDL_IMAGE_FRAMEWORKS_DIR = $(SDL_IMAGE_DIR)/Frameworks
BOOST_INCLUDE_DIR = $(SYSTEM_INCLUDE_DIR)
BOOST_LIB_DIR = $(SYSTEM_LIB_DIR)

SOURCE_DIR = src
ENGINE_LIB_SOURCE_DIR = engine
ENGINE_LIB_TEST_SOURCE_DIR = $(ENGINE_SOURCE_DIR)/test
GAME_BIN_SOURCE_DIR = game

GAME_DATA_DIR = data
GAME_MOD_DIR = mod
GAME_LEVEL_DIR = level
GAME_MODEL_DIR = model
GAME_SCRIPT_DIR = script
GAME_TEXTURE_DIR = texture
GAME_SOUND_DIR = sound
GAME_MUSIC_DIR = music
GAME_SHADER_DIR = shader
GAME_TEXT_DIR = text
GAME_CONFIG_DIR = config

# Mac specific
GAME_APP_FRAMEWORKS = $(SDL_FRAMEWORK).framework $(SDL_IMAGE_FRAMEWORK).framework lib$(FMOD_LIB).dylib

GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_MOD_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_LEVEL_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_MODEL_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_SCRIPT_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_TEXTURE_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_SOUND_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_MUSIC_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_SHADER_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_TEXT_DIR)/*)
GAME_DATA_SOURCES += $(wildcard $(GAME_DATA_DIR)/$(GAME_CONFIG_DIR)/*)

GAME_APP_RESOURCES = $(patsubst $(GAME_DATA_DIR)/%, %, $(GAME_DATA_SOURCES))

ENGINE_LIB_CPP_SOURCES = $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_SOURCE_DIR)/*.cpp)
ENGINE_LIB_MM_SOURCES = $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_SOURCE_DIR)/*.mm)
ENGINE_LIB_TEST_CPP_SOURCES = $(wildcard $(SOURCE_DIR)/$(ENGINE_LIB_TEST_SOURCE_DIR)/*.cpp)
GAME_BIN_CPP_SOURCES = $(wildcard $(SOURCE_DIR)/$(GAME_BIN_SOURCE_DIR)/*.cpp)

ENGINE_LIB_OBJECTS = $(patsubst $(SOURCE_DIR)/%.cpp, %.o, $(ENGINE_LIB_CPP_SOURCES))
ENGINE_LIB_OBJECTS += $(patsubst $(SOURCE_DIR)/%.mm, %.o, $(ENGINE_LIB_MM_SOURCES))
ENGINE_LIB_TEST_BIN_OBJECTS = $(patsubst $(SOURCE_DIR)/%.cpp, %.o, $(ENGINE_LIB_TEST_CPP_SOURCES))
GAME_BIN_OBJECTS = $(patsubst $(SOURCE_DIR)/%.cpp, %.o, $(GAME_BIN_CPP_SOURCES))

CXXFLAGS = --std=c++14
CPPFLAGS = -I$(GLM_INCLUDE_DIR) -I$(LUA_INCLUDE_DIR) -I$(FMOD_INCLUDE_DIR) -I$(BOOST_INCLUDE_DIR) -I$(SYSTEM_INCLUDE_DIR)
LDFLAGS = -L$(LUA_LIB_DIR) -L$(FMOD_LIB_DIR) -L$(SYSTEM_LIB_DIR)

ENGINE_LIB_LDLIBS = -l$(LUA_LIB) -l$(FMOD_LIB) $(BOOST_LIB_DIR)/$(BOOST_SYSTEM_LIB) $(BOOST_LIB_DIR)/$(BOOST_FILESYSTEM_LIB) $(BOOST_LIB_DIR)/$(BOOST_LOG_LIB)

# Mac specific
CPPFLAGS += -F$(SDL_FRAMEWORKS_DIR) -F$(SDL_IMAGE_FRAMEWORKS_DIR)
LDFLAGS += -Xlinker -rpath -Xlinker @loader_path/../Frameworks
ENGINE_LIB_LDLIBS += -framework $(SDL_FRAMEWORK) -framework $(SDL_IMAGE_FRAMEWORK) -framework $(OPENGL_FRAMEWORK) -fobjc-link-runtime

.PHONY: all clean release debug

all: release

clean:
	$(RM) -r $(BUILD_DIR)

# Release target

RELEASE_BUILD_DIR = $(BUILD_DIR)/release
RELEASE_BUILD_INTERMEDIATE_DIR = $(RELEASE_BUILD_DIR)/tmp
RELEASE_GAME_BIN_DIR = $(RELEASE_GAME_APP)/Contents/MacOS

RELEASE_ENGINE_LIB = $(RELEASE_BUILD_DIR)/lib$(ENGINE_LIB).a
RELEASE_ENGINE_LIB_TEST_BIN = $(RELEASE_BUILD_DIR)/$(ENGINE_LIB_TEST_BIN)
RELEASE_GAME_BIN = $(RELEASE_GAME_BIN_DIR)/$(GAME_BIN)

# Mac specific
RELEASE_GAME_APP = $(RELEASE_BUILD_DIR)/$(GAME_APP)
RELEASE_GAME_APP_FRAMEWORKS_DIR = $(RELEASE_GAME_APP)/Contents/Frameworks
RELEASE_GAME_APP_FRAMEWORKS = $(addprefix $(RELEASE_GAME_APP_FRAMEWORKS_DIR)/, $(GAME_APP_FRAMEWORKS))
RELEASE_GAME_APP_INFO_PLIST = $(RELEASE_GAME_APP)/Contents/Info.plist
RELEASE_GAME_APP_PKGINFO = $(RELEASE_GAME_APP)/Contents/PkgInfo
RELEASE_GAME_RESOURCES_DIR = $(RELEASE_GAME_APP)/Contents/Resources
RELEASE_GAME_APP_RESOURCES = $(addprefix $(RELEASE_GAME_RESOURCES_DIR)/, $(GAME_APP_RESOURCES))

RELEASE_ENGINE_LIB_OBJECTS = $(addprefix $(RELEASE_BUILD_INTERMEDIATE_DIR)/, $(ENGINE_LIB_OBJECTS))
RELEASE_ENGINE_LIB_TEST_BIN_OBJECTS = $(addprefix $(RELEASE_BUILD_INTERMEDIATE_DIR)/, $(ENGINE_LIB_TEST_BIN_OBJECTS))
RELEASE_GAME_BIN_OBJECTS = $(addprefix $(RELEASE_BUILD_INTERMEDIATE_DIR)/, $(GAME_BIN_OBJECTS))

release: CXXFLAGS += -Os

# Mac specific
release: $(RELEASE_GAME_APP) $(RELEASE_ENGINE_TEST_BIN)

$(RELEASE_ENGINE_LIB): $(RELEASE_ENGINE_LIB_OBJECTS)
	mkdir -p `dirname $@`
	$(AR) $(ARFLAGS) $@ $<

$(RELEASE_ENGINE_LIB_TEST_BIN): $(RELEASE_ENGINE_LIB_TEST_BIN_OBJECTS) $(RELEASE_ENGINE_LIB)
	mkdir -p `dirname $@`
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

$(RELEASE_GAME_BIN): $(RELEASE_GAME_BIN_OBJECTS) $(RELEASE_ENGINE_LIB)
	mkdir -p `dirname $@`
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

$(RELEASE_GAME_BIN): LDLIBS += $(ENGINE_LIB_LDLIBS)

# Mac specific
$(RELEASE_GAME_APP): $(RELEASE_GAME_BIN) $(RELEASE_GAME_APP_INFO_PLIST) $(RELEASE_GAME_APP_PKGINFO) $(RELEASE_GAME_APP_FRAMEWORKS) $(RELEASE_GAME_APP_RESOURCES)

# Mac specific
$(RELEASE_GAME_APP_INFO_PLIST): $(SOURCE_DIR)/$(GAME_BIN_SOURCE_DIR)/Info.plist
	mkdir -p `dirname $@`
	cp $< $@

# Mac specific
$(RELEASE_GAME_APP_PKGINFO): $(SOURCE_DIR)/$(GAME_BIN_SOURCE_DIR)/PkgInfo
	mkdir -p `dirname $@`
	cp $< $@

# Mac specific
$(RELEASE_GAME_APP_FRAMEWORKS_DIR)/%: $(SDL_FRAMEWORKS_DIR)/%
	mkdir -p `dirname $@`
	cp -r $< $@

# Mac specific
$(RELEASE_GAME_APP_FRAMEWORKS_DIR)/%: $(SDL_IMAGE_FRAMEWORKS_DIR)/%
	mkdir -p `dirname $@`
	cp -r $< $@

# Mac specific
$(RELEASE_GAME_APP_FRAMEWORKS_DIR)/%: $(FMOD_LIB_DIR)/%
	mkdir -p `dirname $@`
	cp -r $< $@

# Mac specific
$(RELEASE_GAME_RESOURCES_DIR)/%: $(GAME_DATA_DIR)/%
	mkdir -p `dirname $@`
	cp $< $@

$(RELEASE_BUILD_INTERMEDIATE_DIR)/%.o: $(SOURCE_DIR)/%.cpp
	mkdir -p `dirname $@`
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

$(RELEASE_BUILD_INTERMEDIATE_DIR)/%.o: $(SOURCE_DIR)/%.mm
	mkdir -p `dirname $@`
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

# Debug target

DEBUG_BUILD_DIR = $(BUILD_DIR)/debug
DEBUG_BUILD_INTERMEDIATE_DIR = $(DEBUG_BUILD_DIR)/tmp
DEBUG_GAME_BIN_DIR = $(DEBUG_GAME_APP)/Contents/MacOS

DEBUG_ENGINE_LIB = $(DEBUG_BUILD_DIR)/lib$(ENGINE_LIB).a
DEBUG_ENGINE_LIB_TEST_BIN = $(DEBUG_BUILD_DIR)/$(ENGINE_LIB_TEST_BIN)
DEBUG_GAME_BIN = $(DEBUG_GAME_BIN_DIR)/$(GAME_BIN)

# Mac specific
DEBUG_GAME_APP = $(DEBUG_BUILD_DIR)/$(GAME_APP)
DEBUG_GAME_APP_FRAMEWORKS_DIR = $(DEBUG_GAME_APP)/Contents/Frameworks
DEBUG_GAME_APP_FRAMEWORKS = $(addprefix $(DEBUG_GAME_APP_FRAMEWORKS_DIR)/, $(GAME_APP_FRAMEWORKS))
DEBUG_GAME_APP_INFO_PLIST = $(DEBUG_GAME_APP)/Contents/Info.plist
DEBUG_GAME_APP_PKGINFO = $(DEBUG_GAME_APP)/Contents/PkgInfo
DEBUG_GAME_RESOURCES_DIR = $(DEBUG_GAME_APP)/Contents/Resources
DEBUG_GAME_APP_RESOURCES = $(addprefix $(DEBUG_GAME_RESOURCES_DIR)/, $(GAME_APP_RESOURCES))

DEBUG_ENGINE_LIB_OBJECTS = $(addprefix $(DEBUG_BUILD_INTERMEDIATE_DIR)/, $(ENGINE_LIB_OBJECTS))
DEBUG_ENGINE_LIB_TEST_BIN_OBJECTS = $(addprefix $(DEBUG_BUILD_INTERMEDIATE_DIR)/, $(ENGINE_LIB_TEST_BIN_OBJECTS))
DEBUG_GAME_BIN_OBJECTS = $(addprefix $(DEBUG_BUILD_INTERMEDIATE_DIR)/, $(GAME_BIN_OBJECTS))

debug: CXXFLAGS += -Os

# Mac specific
debug: $(DEBUG_GAME_APP) $(DEBUG_ENGINE_TEST_BIN)

$(DEBUG_ENGINE_LIB): $(DEBUG_ENGINE_LIB_OBJECTS)
	mkdir -p `dirname $@`
	$(AR) $(ARFLAGS) $@ $<

$(DEBUG_ENGINE_LIB_TEST_BIN): $(DEBUG_ENGINE_LIB_TEST_BIN_OBJECTS) $(DEBUG_ENGINE_LIB)
	mkdir -p `dirname $@`
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

$(DEBUG_GAME_BIN): $(DEBUG_GAME_BIN_OBJECTS) $(DEBUG_ENGINE_LIB)
	mkdir -p `dirname $@`
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

$(DEBUG_GAME_BIN): LDLIBS += $(ENGINE_LIB_LDLIBS)

# Mac specific
$(DEBUG_GAME_APP): $(DEBUG_GAME_BIN) $(DEBUG_GAME_APP_INFO_PLIST) $(DEBUG_GAME_APP_PKGINFO) $(DEBUG_GAME_APP_FRAMEWORKS) $(DEBUG_GAME_APP_RESOURCES)

# Mac specific
$(DEBUG_GAME_APP_INFO_PLIST): $(SOURCE_DIR)/$(GAME_BIN_SOURCE_DIR)/Info.plist
	mkdir -p `dirname $@`
	cp $< $@

# Mac specific
$(DEBUG_GAME_APP_PKGINFO): $(SOURCE_DIR)/$(GAME_BIN_SOURCE_DIR)/PkgInfo
	mkdir -p `dirname $@`
	cp $< $@

# Mac specific
$(DEBUG_GAME_APP_FRAMEWORKS_DIR)/%: $(SDL_FRAMEWORKS_DIR)/%
	mkdir -p `dirname $@`
	cp -r $< $@

# Mac specific
$(DEBUG_GAME_APP_FRAMEWORKS_DIR)/%: $(SDL_IMAGE_FRAMEWORKS_DIR)/%
	mkdir -p `dirname $@`
	cp -r $< $@

# Mac specific
$(DEBUG_GAME_APP_FRAMEWORKS_DIR)/%: $(FMOD_LIB_DIR)/%
	mkdir -p `dirname $@`
	cp -r $< $@

# Mac specific
$(DEBUG_GAME_RESOURCES_DIR)/%: $(GAME_DATA_DIR)/%
	mkdir -p `dirname $@`
	cp $< $@

$(DEBUG_BUILD_INTERMEDIATE_DIR)/%.o: $(SOURCE_DIR)/%.cpp
	mkdir -p `dirname $@`
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

$(DEBUG_BUILD_INTERMEDIATE_DIR)/%.o: $(SOURCE_DIR)/%.mm
	mkdir -p `dirname $@`
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<
